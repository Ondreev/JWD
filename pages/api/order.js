export default async function handler(req, res) {
  if (req.method !== 'POST') {
    res.status(405).json({ success: false, error: 'Method not allowed' });
    return;
  }

  const order = req.body;

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ –¥–ª—è Telegram
  const itemsText = order.items.map(item =>
    `${item.name} x${item.quantity} ‚Äî ${item.price * item.quantity} —Ä—É–±.`
  ).join('\n');

  const total = order.items.reduce((sum, item) => sum + item.price * item.quantity, 0);

  const text = `
üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>
üë§ <b>–ò–º—è:</b> ${order.customer.name}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${order.customer.phone}
üè† <b>–ê–¥—Ä–µ—Å:</b> ${order.customer.address}
üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${order.customer.comment || '-'}
-------------------------
${itemsText}
-------------------------
<b>–ò—Ç–æ–≥–æ:</b> ${total} —Ä—É–±.
  `;

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram-–≥—Ä—É–ø–ø—É
  const botToken = process.env.BOT_TOKEN;
  const chatId = process.env.ADMIN_GROUP_ID; // ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã

  try {
    const tgRes = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML'
      })
    });

    const tgData = await tgRes.json();

    if (tgData.ok) {
      res.status(200).json({ success: true });
    } else {
      console.error('–û—à–∏–±–∫–∞ Telegram:', tgData);
      res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram', details: tgData });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ success: false, error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞', details: error.message });
  }
}
